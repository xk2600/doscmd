***************
*** 34,39 ****
  __FBSDID("$FreeBSD: projects/doscmd/tty.c,v 1.25 2002/04/12 21:18:05 charnier Exp $");
  
  #include <sys/ioctl.h>
  #include <sys/time.h>
  #include <sys/types.h>
  #include <sys/mman.h>
--- 34,40 ----
  __FBSDID("$FreeBSD: projects/doscmd/tty.c,v 1.25 2002/04/12 21:18:05 charnier Exp $");
  
  #include <sys/ioctl.h>
+ #include <sys/select.h>
  #include <sys/time.h>
  #include <sys/types.h>
  #include <sys/mman.h>
***************
*** 1471,1477 ****
  {
      	if (attr == TTYF_REDIRECT) {
  		if (redirect1) {
- 		    write(1, &c, 1);
  		    return;
  		}
  		attr = -1;
--- 1472,1479 ----
  {
      	if (attr == TTYF_REDIRECT) {
  		if (redirect1) {
+ 		    if(!quietmode)
+ 			write(1, &c, 1);
  		    return;
  		}
  		attr = -1;
***************
*** 1487,1494 ****
  #ifndef NO_X
  			XBell(dpy, 0);
  #endif
- 		} else
  			write(1, "\007", 1);
  		break;
  	case 0x08:
  		if (row > (height - 1) || col > width)
--- 1489,1498 ----
  #ifndef NO_X
  			XBell(dpy, 0);
  #endif
+ 		} else {
+ 		    if(!quietmode)
  			write(1, "\007", 1);
+ 		}
  		break;
  	case 0x08:
  		if (row > (height - 1) || col > width)
***************
*** 1658,1677 ****
  {
      int r;
  
      if ((r = nextchar) != 0) {
  	nextchar = 0;
  	return(r & 0xff);
      }
  
-     if ((flag & TTYF_REDIRECT) && redirect0) {
- 	char c;
-     	if (read(STDIN_FILENO, &c, 1) != 1)
- 	    return(-1);
- 	if (c == '\n')
- 	    c = '\r';
- 	return(c);
-     }
- 
      if (KbdEmpty()) {
  	if (flag & TTYF_BLOCK) {
  	    while (KbdEmpty())
--- 1662,1675 ----
  {
      int r;
  
+     if(quietmode && !xmode)
+ 	return(0);
+ 
      if ((r = nextchar) != 0) {
  	nextchar = 0;
  	return(r & 0xff);
      }
  
      if (KbdEmpty()) {
  	if (flag & TTYF_BLOCK) {
  	    while (KbdEmpty())
***************
*** 1858,1863 ****
  int
  KbdEmpty()
  {
  	return(K_NEXT == K_FREE);
  }
  
--- 1856,1877 ----
  int
  KbdEmpty()
  {
+ 	if(!xmode) {
+ 	    fd_set rd;
+ 	    struct timeval tv;
+ 
+ 	    FD_ZERO(&rd);
+ 	    FD_SET(STDIN_FILENO, &rd);
+ 	    tv.tv_sec=0;
+ 	    tv.tv_usec=0;
+ 	    if(select(STDIN_FILENO+1, &rd, NULL, NULL, &tv)==1) {
+ 		char ch=0;
+ 		read(STDIN_FILENO, &ch, 1);
+ 		if(ch == '\n')
+ 			ch = '\r';
+ 		KbdWrite(ch);
+ 	    }
+ 	}
  	return(K_NEXT == K_FREE);
  }
  
